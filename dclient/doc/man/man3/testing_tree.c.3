.TH "testing_tree.c" 3 "Wed Apr 14 2021" "Version 1.1" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
testing_tree.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'testing_tree\&.h'\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include 'buttons\&.h'\fP
.br
\fC#include 'main_header\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBrefresh_devices_data\fP (\fBD_Collection\fP *devices_new, __int32_t device_num)"
.br
.ti -1c
.RI "void \fBdelete_old_dev\fP (\fBD_Collection\fP **array, __int32_t *dev_num)"
.br
.ti -1c
.RI "int \fBinsert_new_devices\fP (\fBD_Collection\fP **array, \fBD_Collection\fP *devices_new, __int32_t dev_num, __int32_t *old_number)"
.br
.ti -1c
.RI "int \fBdevice_check\fP (\fBD_Collection\fP *devices_new, int dev_num)"
.br
.ti -1c
.RI "int \fBinsert_new_tasks\fP (\fBT_Collection\fP **array, \fBT_Collection\fP *tasks_new, __int32_t task_num, __int32_t *old_number)"
.br
.ti -1c
.RI "void \fBdelete_old_tasks\fP (\fBT_Collection\fP **array, __int32_t *task_num)"
.br
.ti -1c
.RI "int \fBrefresh_task_data\fP (\fBT_Collection\fP *tasks_new, int task_num)"
.br
.ti -1c
.RI "int \fBtask_check\fP (\fBT_Collection\fP *tasks_new, int task_num)"
.br
.ti -1c
.RI "void \fBcreate_list_store_task\fP (void)"
.br
.ti -1c
.RI "void \fBcreate_list_store_dev\fP (void)"
.br
.ti -1c
.RI "int \fBadd_new_task\fP (\fBTask\fP *task_t)"
.br
.ti -1c
.RI "int \fBadd_new_dev\fP (\fBDevices\fP *devices)"
.br
.ti -1c
.RI "void \fBchange_list_store_view_devices\fP (GtkWidget *widget)"
.br
.ti -1c
.RI "void \fBchange_list_store_view_process\fP (GtkWidget *widget)"
.br
.ti -1c
.RI "int \fBfill_task_item\fP (\fBTask\fP *task_item, GtkTreeIter *iter, int *array_i)"
.br
.ti -1c
.RI "int \fBfill_device_item\fP (\fBDevices\fP *f_temp, GtkTreeIter *iter)"
.br
.ti -1c
.RI "void \fBrefresh_list_item_device\fP (\fBDevices\fP *ref_temp)"
.br
.ti -1c
.RI "void \fBrefresh_list_item\fP (\fBTask\fP *task_item, int *array_i)"
.br
.ti -1c
.RI "void \fBremove_task_item\fP (gint pid)"
.br
.ti -1c
.RI "void \fBremove_list_item_device\fP (gchar *directory, gchar *name)"
.br
.ti -1c
.RI "gint \fBcompare_string_list_item\fP (GtkTreeModel *model, GtkTreeIter *iter1, GtkTreeIter *iter2, gpointer column)"
.br
.ti -1c
.RI "gint \fBcompare_int_list_item\fP (GtkTreeModel *model, GtkTreeIter *iter1, GtkTreeIter *iter2, gpointer column)"
.br
.ti -1c
.RI "gint \fBcompare_int_list_item_size\fP (GtkTreeModel *model, GtkTreeIter *iter1, GtkTreeIter *iter2, gpointer column)"
.br
.ti -1c
.RI "gint \fBcompare_int_list_item_time\fP (GtkTreeModel *model, GtkTreeIter *iter1, GtkTreeIter *iter2, gpointer column)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int add_new_dev (\fBDevices\fP * devices)"

.SS "int add_new_task (\fBTask\fP * task_t)"

.SS "void change_list_store_view_devices (GtkWidget * widget)"

.SS "void change_list_store_view_process (GtkWidget * widget)"

.SS "gint compare_int_list_item (GtkTreeModel * model, GtkTreeIter * iter1, GtkTreeIter * iter2, gpointer column)"

.SS "gint compare_int_list_item_size (GtkTreeModel * model, GtkTreeIter * iter1, GtkTreeIter * iter2, gpointer column)"

.SS "gint compare_int_list_item_time (GtkTreeModel * model, GtkTreeIter * iter1, GtkTreeIter * iter2, gpointer column)"

.SS "gint compare_string_list_item (GtkTreeModel * model, GtkTreeIter * iter1, GtkTreeIter * iter2, gpointer column)"

.SS "void create_list_store_dev (void)"

.SS "void create_list_store_task (void)"

.SS "void delete_old_dev (\fBD_Collection\fP ** array, __int32_t * dev_num)"

.SS "void delete_old_tasks (\fBT_Collection\fP ** array, __int32_t * task_num)"

.SS "int device_check (\fBD_Collection\fP * devices_new, int dev_num)"

.SS "int fill_device_item (\fBDevices\fP * f_temp, GtkTreeIter * iter)"

.SS "int fill_task_item (\fBTask\fP * task_item, GtkTreeIter * iter, int * array_i)"

.SS "int insert_new_devices (\fBD_Collection\fP ** array, \fBD_Collection\fP * devices_new, __int32_t dev_num, __int32_t * old_number)"

.SS "int insert_new_tasks (\fBT_Collection\fP ** array, \fBT_Collection\fP * tasks_new, __int32_t task_num, __int32_t * old_number)"

.SS "int refresh_devices_data (\fBD_Collection\fP * devices_new, __int32_t device_num)"

.SS "void refresh_list_item (\fBTask\fP * task_item, int * array_i)"

.SS "void refresh_list_item_device (\fBDevices\fP * ref_temp)"

.SS "int refresh_task_data (\fBT_Collection\fP * tasks_new, int task_num)"

.SS "void remove_list_item_device (gchar * directory, gchar * name)"

.SS "void remove_task_item (gint pid)"

.SS "int task_check (\fBT_Collection\fP * tasks_new, int task_num)"

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
